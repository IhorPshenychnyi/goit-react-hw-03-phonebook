{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","onSubmit","preventDefault","props","reset","this","className","s","form","label","type","pattern","title","required","onChange","button","Component","ContactList","contacts","handleClick","list","map","id","btn","onClick","Filter","input","App","filter","handleSubmit","data","some","contact","toLowerCase","alert","prevState","shortid","generate","handleRemove","changeFilter","getVisibleContacts","normalizedFilter","includes","localContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee9ad68d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1-UVA\",\"input\":\"Filter_input__3x-vI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3GQTY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1HieQ\",\"label\":\"ContactForm_label__3hHtW\",\"button\":\"ContactForm_button__2OV2a\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.onSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport { ContactForm };\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, handleClick }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <span>\n          {name}: {number}\n        </span>\n        <button className={s.btn} type=\"button\" onClick={() => handleClick(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport { ContactList };\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name\n    <input\n      className={s.input}\n      type=\"text\"\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filter/Filter';\n\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const localContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(localContacts);\n\n    this.setState({ contacts: parsedContacts || this.state.contacts });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  handleSubmit = data => {\n    const { contacts } = this.state;\n    const existContact = contacts.some(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n    );\n\n    if (existContact) {\n      alert(`${data.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [\n        {\n          id: shortid.generate(),\n          name: data.name,\n          number: data.number,\n        },\n        ...prevState.contacts,\n      ],\n    }));\n  };\n\n  handleRemove = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handleSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <ContactList\n          contacts={visibleContacts}\n          handleClick={this.handleRemove}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Orm8\",\"btn\":\"ContactList_btn__3Ze0C\"};"],"sourceRoot":""}